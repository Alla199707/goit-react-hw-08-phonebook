{"version":3,"file":"static/js/728.75bab63e.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: '100vh';\n  width: 400px;\n  margin: 30px;\n  border: 1px solid black;\n  font-size: 50;\n  color: '#010101';\n  border-radius: 5px;\n  background-color: Aqua;\n  padding: 16px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n`;\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Forma = styled.form`\n  border: 1px solid black;\n  border-radius: 4px;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  margin: 8px 0;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  padding: 3px;\n  border-radius: 8px;\n  margin-left: 10px;\n  height: 20px;\n  width: 350px;\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  height: 30px;\n  font-size: 12px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: DodgerBlue;\n  color: white;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1);\n    box-shadow: 5px 1px 1px BlueViolet;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","export const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilters = state => state.filter;\nexport const selectIContacts = state => state.contacts.contacts;\n","import React, { useState } from 'react';\nimport { Forma, Label, Button, Input, Container } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addContactItem } from 'redux/contacts/operations';\nimport { selectIContacts } from 'redux/contacts/selectors';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectIContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const addNewContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    handleCheck(addNewContact);\n    setName('');\n    setNumber('');\n  };\n\n  const handleCheck = addNewContact => {\n    contacts.find(\n      contact => contact.name.toLowerCase() === addNewContact.name.toLowerCase()\n    )\n      ? alert(`${name}is already in contacts.`)\n      : dispatch(addContactItem(addNewContact));\n  };\n\n  return (\n    <Container>\n      <Forma onSubmit={handleSubmit}>\n        <Label>\n          Name:\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number:\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button>Add contact</Button>\n      </Forma>\n    </Container>\n  );\n}\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin: 8px 0;\n  font-size: 18px;\n  font-weight: 500;\n  text-align: center;\n  display: block;\n`;\n\nexport const Input = styled.input`\n  padding: 3px;\n  border-radius: 8px;\n  margin-left: 10px;\n  height: 20px;\n  width: 190px;\n  cursor: pointer;\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilterContacts } from 'redux/contacts/FilterSlice';\nimport { selectFilters } from 'redux/contacts/selectors';\nconst Filter = () => {\n  const filter = useSelector(selectFilters);\n  const dispatch = useDispatch();\n  const filterContact = e => {\n    dispatch(getFilterContacts(e.currentTarget.value.trim()));\n  };\n\n  return (\n    <>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" value={filter} onChange={filterContact} />\n      </Label>\n    </>\n  );\n};\n\nexport default Filter;\n","const ContactItem = ({ contacts: { name, number } }) => {\n  return (\n    <>\n      <span> {name} : </span>\n      <span>{number} </span>\n    </>\n  );\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  font-size: 18px;\n  font-weight: 500;\n  margin-left: 8px;\n  padding: 0;\n`;\nexport const ListItem = styled.li`\n  margin-bottom: 6px;\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  height: 30px;\n  font-size: 12px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: DodgerBlue;\n  color: white;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 5px 1px 1px BlueViolet;\n  }\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"rgb(63, 81, 181)\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import { deleteContactItem, fetchContacts } from 'redux/contacts/operations';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { List, Button, ListItem } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectFilters,\n  selectIContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectIContacts);\n  const filter = useSelector(selectFilters);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const getFilterContacts = () => {\n    return (\n      contacts &&\n      contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(filter.toLowerCase());\n      })\n    );\n  };\n  \n  const filterContacts = getFilterContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <List>\n        {filterContacts.map(contact => (\n          <ListItem key={contact.id}>\n            <ContactItem contacts={contact} />\n            <Button onClick={() => dispatch(deleteContactItem(contact.id))}>\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { Title } from 'components/Container/Container.styled';\nimport { Container } from 'components/Container/Container.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  // const contactsList2 = useSelector(selectIContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n\n      {/* {contactsList2.length === 0 ? (\n        console.log('There are no contacts.')\n      ) : (\n        <ContactList />\n      )} */}\n      <ContactList />\n      {isLoading && !error && <Loader />}\n    </Container>\n  );\n}\n"],"names":["Container","styled","Title","Forma","Label","Input","Button","selectIsLoading","state","contacts","isLoading","selectError","error","selectFilters","filter","selectIContacts","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","handleCheck","addNewContact","find","contact","toLowerCase","alert","addContactItem","onSubmit","preventDefault","id","nanoid","type","onChange","pattern","title","required","getFilterContacts","currentTarget","trim","List","ListItem","height","width","radius","color","ariaLabel","wrapperStyle","marginLeft","marginRight","visible","filterContacts","includes","useEffect","fetchContacts","map","onClick","deleteContactItem","Contacts"],"sourceRoot":""}